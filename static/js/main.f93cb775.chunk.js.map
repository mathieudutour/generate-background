{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["colors","lightColors","boundRandom","min","max","Math","random","smoothPoint","p","previousPoint","join","FirstWave","firstPoint","secondPoint","thirdPoint","fourthPoint","fifthPoint","sixthPoint","opacity","d","fill","SecondWave","ThirdWave","RandomGradient","firstColor","floor","length","secondColor","filter","x","offset","stop-color","App","useState","rerender","className","viewBox","preserveAspectRatio","width","height","id","x1","x2","y1","y2","gradientUnits","stopOpacity","y","style","mixBlendMode","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f93cb775.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nconst colors = [\n  \"#D033DE\",\n  \"#EB5772\",\n  \"#8000FF\",\n  \"#00FFD1\",\n  \"#6C57EB\",\n  \"#33D4DE\",\n  \"#7340C7\",\n];\n\nconst lightColors = [\"#1DF5F5\", \"#F5511D\"];\n\nfunction boundRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nfunction App() {\n  const [, rerender] = useState(0);\n  return (\n    <div className=\"App\">\n      <svg\n        viewBox=\"0 0 100 100\"\n        preserveAspectRatio=\"none\"\n        width=\"100vw\"\n        height=\"100vh\"\n      >\n        <defs>\n          <linearGradient\n            id=\"background-gradient\"\n            x1={boundRandom(0, 100)}\n            x2={boundRandom(0, 100)}\n            y1=\"-5\"\n            y2=\"105\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <RandomGradient />\n          </linearGradient>\n          <linearGradient\n            id=\"first-gradient\"\n            x1={boundRandom(20, 80)}\n            x2={boundRandom(20, 80)}\n            y1=\"0\"\n            y2=\"100\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <RandomGradient />\n          </linearGradient>\n          <linearGradient\n            id=\"second-gradient\"\n            x1=\"0.50\"\n            x2=\"0.50\"\n            y1=\"0\"\n            y2=\"1\"\n          >\n            <stop\n              offset=\"0%\"\n              stop-color={\n                lightColors[Math.floor(Math.random() * lightColors.length)]\n              }\n            />\n            <stop offset=\"100%\" stop-color=\"#FFFFFF\" stopOpacity=\"0\" />\n          </linearGradient>\n          <linearGradient id=\"third-gradient\" x1=\"0.50\" x2=\"0.50\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0%\" stop-color=\"#FFFFFF\" />\n            <stop offset=\"100%\" stop-color=\"#FFFFFF\" stopOpacity=\"0\" />\n          </linearGradient>\n        </defs>\n        <rect\n          x=\"0\"\n          y=\"0\"\n          width=\"100\"\n          height=\"100\"\n          fill=\"url(#background-gradient)\"\n        />\n\n        <g\n          opacity=\"0.95\"\n          style={{ filter: `drop-shadow( 0px -20px 20px rgba(0, 0, 0, .08))` }}\n        >\n          <FirstWave />\n        </g>\n        <g\n          style={{\n            mixBlendMode: \"overlay\",\n            filter: `drop-shadow( 0px -8px 50px rgba(0, 0, 0, .25))`,\n          }}\n          opacity=\"0.4\"\n        >\n          <ThirdWave />\n        </g>\n        <g\n          style={{\n            mixBlendMode: \"overlay\",\n            filter: `drop-shadow( 0px 0px 50px rgba(0, 0, 0, .2))`,\n          }}\n          opacity=\"0.5\"\n        >\n          <SecondWave />\n        </g>\n      </svg>\n      <button onClick={() => rerender((x) => x + 1)} className=\"hud\">\n        Regenerate\n      </button>\n    </div>\n  );\n}\n\nfunction smoothPoint(p: number[], previousPoint: number[]) {\n  return `${p[0] - (p[0] - previousPoint[0]) / 2} ${p[1]} ${p.join(\" \")}`;\n}\n\nfunction FirstWave() {\n  const firstPoint = [-10, boundRandom(15, 30)];\n  const secondPoint = [boundRandom(0, 15), boundRandom(5, firstPoint[1] - 5)];\n  const thirdPoint = [\n    boundRandom(Math.min(secondPoint[0] + 10, 25), 35),\n    boundRandom(secondPoint[1] + 10, 45),\n  ];\n  const fourthPoint = [\n    boundRandom(Math.min(thirdPoint[0] + 10, 45), 55),\n    boundRandom(15, thirdPoint[1]),\n  ];\n  const fifthPoint = [\n    boundRandom(Math.min(fourthPoint[0] + 10, 65), 80),\n    boundRandom(fourthPoint[1], 45),\n  ];\n  const sixthPoint = [110, boundRandom(0, Math.max(fifthPoint[1], 10))];\n\n  return (\n    <path\n      opacity=\"0.5\"\n      d={`M ${firstPoint.join(\" \")} C ${firstPoint[0] + 10} ${\n        firstPoint[1]\n      } ${smoothPoint(secondPoint, firstPoint)} S ${smoothPoint(\n        thirdPoint,\n        secondPoint\n      )} S ${smoothPoint(fourthPoint, thirdPoint)} S ${smoothPoint(\n        fifthPoint,\n        fourthPoint\n      )} S ${smoothPoint(sixthPoint, fifthPoint)} L 110 110 L -10 110 Z`}\n      fill=\"url(#first-gradient)\"\n    />\n  );\n}\n\nfunction SecondWave() {\n  const firstPoint = [-10, boundRandom(50, 90)];\n  const secondPoint = [\n    boundRandom(0, 25),\n    boundRandom(40, Math.min(firstPoint[1] - 5, 60)),\n  ];\n  const thirdPoint = [\n    boundRandom(Math.max(secondPoint[0], 35), 55),\n    boundRandom(secondPoint[1] + 10, 90),\n  ];\n  const fourthPoint = [\n    boundRandom(Math.max(thirdPoint[0], 65), 95),\n    boundRandom(60, thirdPoint[1] - 10),\n  ];\n  const fifthPoint = [110, boundRandom(fourthPoint[1] + 10, 100)];\n\n  return (\n    <path\n      opacity=\"0.5\"\n      d={`M ${firstPoint.join(\" \")} C ${firstPoint[0] + 10} ${\n        firstPoint[1]\n      } ${smoothPoint(secondPoint, firstPoint)} S ${smoothPoint(\n        thirdPoint,\n        secondPoint\n      )} S ${smoothPoint(fourthPoint, thirdPoint)} S ${smoothPoint(\n        fifthPoint,\n        fourthPoint\n      )} L 110 110 L -10 110 Z`}\n      fill=\"url(#second-gradient)\"\n    />\n  );\n}\n\nfunction ThirdWave() {\n  const firstPoint = [-10, boundRandom(50, 70)];\n  const secondPoint = [\n    boundRandom(20, 45),\n    boundRandom(Math.min(firstPoint[1] + 10, 65), 95),\n  ];\n  const thirdPoint = [\n    boundRandom(Math.max(secondPoint[0], 75), 95),\n    boundRandom(50, secondPoint[1] - 10),\n  ];\n  const fourthPoint = [110, boundRandom(thirdPoint[1] + 10, 90)];\n\n  return (\n    <path\n      opacity=\"0.5\"\n      d={`M ${firstPoint.join(\" \")} C ${firstPoint[0] + 10} ${\n        firstPoint[1]\n      } ${smoothPoint(secondPoint, firstPoint)} S ${smoothPoint(\n        thirdPoint,\n        secondPoint\n      )} S ${smoothPoint(fourthPoint, thirdPoint)} L 110 110 L -10 110 Z`}\n      fill=\"url(#third-gradient)\"\n    />\n  );\n}\n\nfunction RandomGradient() {\n  const firstColor = colors[Math.floor(Math.random() * colors.length)];\n  const secondColor = colors.filter((x) => x !== firstColor)[\n    Math.floor(Math.random() * (colors.length - 1))\n  ];\n  return (\n    <>\n      <stop offset=\"0%\" stop-color={firstColor} />\n      <stop offset=\"100%\" stop-color={secondColor} />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}